{"version":3,"sources":["node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/token.js","node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/html.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/index.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/formatting-element-list.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/index.js","node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js","node_modules/.pnpm/@ant-design+icons@4.8.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@ant-design/icons/es/icons/ZoomInOutlined.js","node_modules/.pnpm/@ant-design+icons@4.8.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@ant-design/icons/es/icons/ZoomOutOutlined.js","node_modules/.pnpm/rc-collapse@3.4.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-collapse/es/PanelContent.js","node_modules/.pnpm/rc-collapse@3.4.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-collapse/es/Panel.js","node_modules/.pnpm/rc-collapse@3.4.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-collapse/es/Collapse.js","node_modules/.pnpm/rc-collapse@3.4.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-collapse/es/index.js","node_modules/.pnpm/antd@4.24.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/collapse/Collapse.js","node_modules/.pnpm/antd@4.24.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/collapse/CollapsePanel.js","node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js","node_modules/.pnpm/html-url-attributes@3.0.1/node_modules/html-url-attributes/lib/index.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/content.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/document.js","node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/index.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/content.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/flow.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/text.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/attention.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/block-quote.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-escape.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-reference.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-fenced.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-indented.js","node_modules/.pnpm/micromark-factory-destination@2.0.1/node_modules/micromark-factory-destination/index.js","node_modules/.pnpm/micromark-factory-label@2.0.1/node_modules/micromark-factory-label/index.js","node_modules/.pnpm/micromark-factory-title@2.0.1/node_modules/micromark-factory-title/index.js","node_modules/.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/definition.js","node_modules/.pnpm/micromark-util-html-tag-name@2.0.1/node_modules/micromark-util-html-tag-name/index.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-flow.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-end.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-image.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-link.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/line-ending.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/thematic-break.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/list.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/setext-underline.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/constructs.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/heading-atx.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/autolink.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-text.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-text.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/preprocess.js","node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.2/node_modules/micromark-util-decode-numeric-character-reference/index.js","node_modules/.pnpm/micromark-util-decode-string@2.0.1/node_modules/micromark-util-decode-string/index.js","node_modules/.pnpm/mdast-util-from-markdown@2.0.2/node_modules/mdast-util-from-markdown/lib/index.js","node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/postprocess.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/parse.js","node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/create-tokenizer.js","node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js","node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js","node_modules/.pnpm/remark-rehype@11.1.1/node_modules/remark-rehype/lib/index.js","node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","node_modules/.pnpm/react-markdown@9.1.0_@types+react@18.3.20_react@18.3.1/node_modules/react-markdown/lib/index.js","node_modules/.pnpm/hast-util-parse-selector@4.0.0/node_modules/hast-util-parse-selector/lib/index.js","node_modules/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/create-h.js","node_modules/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/index.js","node_modules/.pnpm/hastscript@9.0.1/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","node_modules/.pnpm/vfile-location@5.0.3/node_modules/vfile-location/lib/index.js","node_modules/.pnpm/web-namespaces@2.0.1/node_modules/web-namespaces/index.js","node_modules/.pnpm/hast-util-from-parse5@8.0.3/node_modules/hast-util-from-parse5/lib/index.js","node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","node_modules/.pnpm/hast-util-to-parse5@8.0.0/node_modules/hast-util-to-parse5/lib/index.js","node_modules/.pnpm/html-void-elements@3.0.0/node_modules/html-void-elements/index.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/preprocessor.js","node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js","node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/open-element-stack.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tree-adapters/default.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/doctype.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/foreign-content.js","node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/escape.js","node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/serializer/index.js","node_modules/.pnpm/hast-util-raw@9.1.0/node_modules/hast-util-raw/lib/index.js","node_modules/.pnpm/rehype-raw@7.0.0/node_modules/rehype-raw/lib/index.js","node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","node_modules/.pnpm/mdast-util-find-and-replace@3.0.2/node_modules/mdast-util-find-and-replace/lib/index.js","node_modules/.pnpm/mdast-util-gfm-footnote@2.1.0/node_modules/mdast-util-gfm-footnote/lib/index.js","node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js","node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","node_modules/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/edit-map.js","node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/syntax.js","node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/infer.js","node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","node_modules/.pnpm/remark-gfm@4.0.1/node_modules/remark-gfm/lib/index.js","node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","node_modules/.pnpm/mdast-util-gfm@3.1.0/node_modules/mdast-util-gfm/lib/index.js","/home/runner/work/react-map-ol/react-map-ol/node_modules/.pnpm/@antv+dumi-theme-antv@0.7.1_@algolia+client-search@5.22.0_@babel+core@7.26.10_@types+re_b9aac5d9ada30f7f72736958cc572c3f/node_modules/@antv/dumi-theme-antv/dist/slots/API/index.module.less?asmodule","node_modules/.pnpm/@antv+dumi-theme-antv@0.7.1_@algolia+client-search@5.22.0_@babel+core@7.26.10_@types+re_b9aac5d9ada30f7f72736958cc572c3f/node_modules/@antv/dumi-theme-antv/dist/slots/API/index.js","node_modules/.pnpm/@antv+dumi-theme-antv@0.7.1_@algolia+client-search@5.22.0_@babel+core@7.26.10_@types+re_b9aac5d9ada30f7f72736958cc572c3f/node_modules/@antv/dumi-theme-antv/dist/pages/Example/index.js"],"sourcesContent":["export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ZoomInOutlinedSvg from \"@ant-design/icons-svg/es/asn/ZoomInOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ZoomInOutlined = function ZoomInOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ZoomInOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(ZoomInOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'ZoomInOutlined';\n}\nexport default RefIcon;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ZoomOutOutlinedSvg from \"@ant-design/icons-svg/es/asn/ZoomOutOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ZoomOutOutlined = function ZoomOutOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ZoomOutOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(ZoomOutOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'ZoomOutOutlined';\n}\nexport default RefIcon;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable react/prop-types */\nimport * as React from 'react';\nimport classnames from 'classnames';\nvar PanelContent = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classnames;\n\n  var prefixCls = props.prefixCls,\n      forceRender = props.forceRender,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      isActive = props.isActive,\n      role = props.role;\n\n  var _React$useState = React.useState(isActive || forceRender),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rendered = _React$useState2[0],\n      setRendered = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (forceRender || isActive) {\n      setRendered(true);\n    }\n  }, [forceRender, isActive]);\n\n  if (!rendered) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: classnames(\"\".concat(prefixCls, \"-content\"), (_classnames = {}, _defineProperty(_classnames, \"\".concat(prefixCls, \"-content-active\"), isActive), _defineProperty(_classnames, \"\".concat(prefixCls, \"-content-inactive\"), !isActive), _classnames), className),\n    style: style,\n    role: role\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content-box\")\n  }, children));\n});\nPanelContent.displayName = 'PanelContent';\nexport default PanelContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"className\", \"id\", \"style\", \"prefixCls\", \"headerClass\", \"children\", \"isActive\", \"destroyInactivePanel\", \"accordion\", \"forceRender\", \"openMotion\", \"extra\", \"collapsible\"];\n\n/* eslint-disable react/prop-types */\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport shallowEqual from 'shallowequal';\nimport PanelContent from './PanelContent';\n\nvar CollapsePanel = /*#__PURE__*/function (_React$Component) {\n  _inherits(CollapsePanel, _React$Component);\n\n  var _super = _createSuper(CollapsePanel);\n\n  function CollapsePanel() {\n    var _this;\n\n    _classCallCheck(this, CollapsePanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onItemClick = function () {\n      var _this$props = _this.props,\n          onItemClick = _this$props.onItemClick,\n          panelKey = _this$props.panelKey;\n\n      if (typeof onItemClick === 'function') {\n        onItemClick(panelKey);\n      }\n    };\n\n    _this.handleKeyPress = function (e) {\n      if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {\n        _this.onItemClick();\n      }\n    };\n\n    _this.renderIcon = function () {\n      var _this$props2 = _this.props,\n          showArrow = _this$props2.showArrow,\n          expandIcon = _this$props2.expandIcon,\n          prefixCls = _this$props2.prefixCls,\n          collapsible = _this$props2.collapsible;\n\n      if (!showArrow) {\n        return null;\n      }\n\n      var iconNode = typeof expandIcon === 'function' ? expandIcon(_this.props) : /*#__PURE__*/React.createElement(\"i\", {\n        className: \"arrow\"\n      });\n      return iconNode && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-expand-icon\"),\n        onClick: collapsible === 'header' || collapsible === 'icon' ? _this.onItemClick : null\n      }, iconNode);\n    };\n\n    _this.renderTitle = function () {\n      var _this$props3 = _this.props,\n          header = _this$props3.header,\n          prefixCls = _this$props3.prefixCls,\n          collapsible = _this$props3.collapsible;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-header-text\"),\n        onClick: collapsible === 'header' ? _this.onItemClick : null\n      }, header);\n    };\n\n    return _this;\n  }\n\n  _createClass(CollapsePanel, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return !shallowEqual(this.props, nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2;\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          id = _this$props4.id,\n          style = _this$props4.style,\n          prefixCls = _this$props4.prefixCls,\n          headerClass = _this$props4.headerClass,\n          children = _this$props4.children,\n          isActive = _this$props4.isActive,\n          destroyInactivePanel = _this$props4.destroyInactivePanel,\n          accordion = _this$props4.accordion,\n          forceRender = _this$props4.forceRender,\n          openMotion = _this$props4.openMotion,\n          extra = _this$props4.extra,\n          collapsible = _this$props4.collapsible,\n          rest = _objectWithoutProperties(_this$props4, _excluded);\n\n      var disabled = collapsible === 'disabled';\n      var collapsibleHeader = collapsible === 'header';\n      var collapsibleIcon = collapsible === 'icon';\n      var itemCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-active\"), isActive), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-disabled\"), disabled), _classNames), className);\n      var headerCls = classNames(\"\".concat(prefixCls, \"-header\"), (_classNames2 = {}, _defineProperty(_classNames2, headerClass, headerClass), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-header-collapsible-only\"), collapsibleHeader), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-icon-collapsible-only\"), collapsibleIcon), _classNames2));\n      /** header 节点属性 */\n\n      var headerProps = {\n        className: headerCls,\n        'aria-expanded': isActive,\n        'aria-disabled': disabled,\n        onKeyPress: this.handleKeyPress\n      };\n\n      if (!collapsibleHeader && !collapsibleIcon) {\n        headerProps.onClick = this.onItemClick;\n        headerProps.role = accordion ? 'tab' : 'button';\n        headerProps.tabIndex = disabled ? -1 : 0;\n      }\n\n      var ifExtraExist = extra !== null && extra !== undefined && typeof extra !== 'boolean'; // https://github.com/ant-design/ant-design/pull/37419#issuecomment-1238812797\n\n      delete rest.header;\n      delete rest.panelKey;\n      delete rest.onItemClick;\n      delete rest.showArrow;\n      delete rest.expandIcon;\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n        className: itemCls,\n        style: style,\n        id: id\n      }), /*#__PURE__*/React.createElement(\"div\", headerProps, this.renderIcon(), this.renderTitle(), ifExtraExist && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-extra\")\n      }, extra)), /*#__PURE__*/React.createElement(CSSMotion, _extends({\n        visible: isActive,\n        leavedClassName: \"\".concat(prefixCls, \"-content-hidden\")\n      }, openMotion, {\n        forceRender: forceRender,\n        removeOnLeave: destroyInactivePanel\n      }), function (_ref, ref) {\n        var motionClassName = _ref.className,\n            motionStyle = _ref.style;\n        return /*#__PURE__*/React.createElement(PanelContent, {\n          ref: ref,\n          prefixCls: prefixCls,\n          className: motionClassName,\n          style: motionStyle,\n          isActive: isActive,\n          forceRender: forceRender,\n          role: accordion ? 'tabpanel' : null\n        }, children);\n      }));\n    }\n  }]);\n\n  return CollapsePanel;\n}(React.Component);\n\nCollapsePanel.defaultProps = {\n  showArrow: true,\n  isActive: false,\n  onItemClick: function onItemClick() {},\n  headerClass: '',\n  forceRender: false\n};\nexport default CollapsePanel;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable react/prop-types */\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport shallowEqual from 'shallowequal';\nimport CollapsePanel from './Panel';\n\nfunction getActiveKeysArray(activeKey) {\n  var currentActiveKey = activeKey;\n\n  if (!Array.isArray(currentActiveKey)) {\n    var activeKeyType = _typeof(currentActiveKey);\n\n    currentActiveKey = activeKeyType === 'number' || activeKeyType === 'string' ? [currentActiveKey] : [];\n  }\n\n  return currentActiveKey.map(function (key) {\n    return String(key);\n  });\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  var _super = _createSuper(Collapse);\n\n  function Collapse(_props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _super.call(this, _props);\n\n    _this.onClickItem = function (key) {\n      var activeKey = _this.state.activeKey;\n\n      if (_this.props.accordion) {\n        activeKey = activeKey[0] === key ? [] : [key];\n      } else {\n        activeKey = _toConsumableArray(activeKey);\n        var index = activeKey.indexOf(key);\n        var isActive = index > -1;\n\n        if (isActive) {\n          // remove active state\n          activeKey.splice(index, 1);\n        } else {\n          activeKey.push(key);\n        }\n      }\n\n      _this.setActiveKey(activeKey);\n    };\n\n    _this.getNewChild = function (child, index) {\n      if (!child) return null;\n      var activeKey = _this.state.activeKey;\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          openMotion = _this$props.openMotion,\n          accordion = _this$props.accordion,\n          rootDestroyInactivePanel = _this$props.destroyInactivePanel,\n          expandIcon = _this$props.expandIcon,\n          collapsible = _this$props.collapsible; // If there is no key provide, use the panel order as default key\n\n      var key = child.key || String(index);\n      var _child$props = child.props,\n          header = _child$props.header,\n          headerClass = _child$props.headerClass,\n          destroyInactivePanel = _child$props.destroyInactivePanel,\n          childCollapsible = _child$props.collapsible;\n      var isActive = false;\n\n      if (accordion) {\n        isActive = activeKey[0] === key;\n      } else {\n        isActive = activeKey.indexOf(key) > -1;\n      }\n\n      var mergeCollapsible = childCollapsible !== null && childCollapsible !== void 0 ? childCollapsible : collapsible;\n      var props = {\n        key: key,\n        panelKey: key,\n        header: header,\n        headerClass: headerClass,\n        isActive: isActive,\n        prefixCls: prefixCls,\n        destroyInactivePanel: destroyInactivePanel !== null && destroyInactivePanel !== void 0 ? destroyInactivePanel : rootDestroyInactivePanel,\n        openMotion: openMotion,\n        accordion: accordion,\n        children: child.props.children,\n        onItemClick: mergeCollapsible === 'disabled' ? null : _this.onClickItem,\n        expandIcon: expandIcon,\n        collapsible: mergeCollapsible\n      }; // https://github.com/ant-design/ant-design/issues/20479\n\n      if (typeof child.type === 'string') {\n        return child;\n      }\n\n      Object.keys(props).forEach(function (propName) {\n        if (typeof props[propName] === 'undefined') {\n          delete props[propName];\n        }\n      });\n      return /*#__PURE__*/React.cloneElement(child, props);\n    };\n\n    _this.getItems = function () {\n      var children = _this.props.children;\n      return toArray(children).map(_this.getNewChild);\n    };\n\n    _this.setActiveKey = function (activeKey) {\n      if (!('activeKey' in _this.props)) {\n        _this.setState({\n          activeKey: activeKey\n        });\n      }\n\n      _this.props.onChange(_this.props.accordion ? activeKey[0] : activeKey);\n    };\n\n    var _activeKey = _props.activeKey,\n        defaultActiveKey = _props.defaultActiveKey;\n    var currentActiveKey = defaultActiveKey;\n\n    if ('activeKey' in _props) {\n      currentActiveKey = _activeKey;\n    }\n\n    _this.state = {\n      activeKey: getActiveKeysArray(currentActiveKey)\n    };\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          accordion = _this$props2.accordion;\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _classNames));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: collapseClassName,\n        style: style,\n        role: accordion ? 'tablist' : null\n      }, this.getItems());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n\n      if ('activeKey' in nextProps) {\n        newState.activeKey = getActiveKeysArray(nextProps.activeKey);\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nCollapse.defaultProps = {\n  prefixCls: 'rc-collapse',\n  onChange: function onChange() {},\n  accordion: false,\n  destroyInactivePanel: false\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","import Collapse from './Collapse';\nexport default Collapse;\nvar Panel = Collapse.Panel;\nexport { Panel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcCollapse from 'rc-collapse';\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport { cloneElement } from '../_util/reactNode';\nimport warning from '../_util/warning';\nimport CollapsePanel from './CollapsePanel';\nvar Collapse = function Collapse(props) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var customizePrefixCls = props.prefixCls,\n    _props$className = props.className,\n    className = _props$className === void 0 ? '' : _props$className,\n    _props$bordered = props.bordered,\n    bordered = _props$bordered === void 0 ? true : _props$bordered,\n    ghost = props.ghost,\n    _props$expandIconPosi = props.expandIconPosition,\n    expandIconPosition = _props$expandIconPosi === void 0 ? 'start' : _props$expandIconPosi;\n  var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n  // Warning if use legacy type `expandIconPosition`\n  process.env.NODE_ENV !== \"production\" ? warning(expandIconPosition !== 'left' && expandIconPosition !== 'right', 'Collapse', '`expandIconPosition` with `left` or `right` is deprecated. Please use `start` or `end` instead.') : void 0;\n  // Align with logic position\n  var mergedExpandIconPosition = React.useMemo(function () {\n    if (expandIconPosition === 'left') {\n      return 'start';\n    }\n    return expandIconPosition === 'right' ? 'end' : expandIconPosition;\n  }, [expandIconPosition]);\n  var renderExpandIcon = function renderExpandIcon() {\n    var panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var expandIcon = props.expandIcon;\n    var icon = expandIcon ? expandIcon(panelProps) : ( /*#__PURE__*/React.createElement(RightOutlined, {\n      rotate: panelProps.isActive ? 90 : undefined\n    }));\n    return cloneElement(icon, function () {\n      return {\n        className: classNames(icon.props.className, \"\".concat(prefixCls, \"-arrow\"))\n      };\n    });\n  };\n  var collapseClassName = classNames(\"\".concat(prefixCls, \"-icon-position-\").concat(mergedExpandIconPosition), _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-borderless\"), !bordered), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-ghost\"), !!ghost), className);\n  var openMotion = _extends(_extends({}, collapseMotion), {\n    motionAppear: false,\n    leavedClassName: \"\".concat(prefixCls, \"-content-hidden\")\n  });\n  var getItems = function getItems() {\n    var children = props.children;\n    return toArray(children).map(function (child, index) {\n      var _a;\n      if ((_a = child.props) === null || _a === void 0 ? void 0 : _a.disabled) {\n        var key = child.key || String(index);\n        var _child$props = child.props,\n          disabled = _child$props.disabled,\n          collapsible = _child$props.collapsible;\n        var childProps = _extends(_extends({}, omit(child.props, ['disabled'])), {\n          key: key,\n          collapsible: collapsible !== null && collapsible !== void 0 ? collapsible : disabled ? 'disabled' : undefined\n        });\n        return cloneElement(child, childProps);\n      }\n      return child;\n    });\n  };\n  return /*#__PURE__*/React.createElement(RcCollapse, _extends({\n    openMotion: openMotion\n  }, props, {\n    expandIcon: renderExpandIcon,\n    prefixCls: prefixCls,\n    className: collapseClassName\n  }), getItems());\n};\nCollapse.Panel = CollapsePanel;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport RcCollapse from 'rc-collapse';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nvar CollapsePanel = function CollapsePanel(props) {\n  process.env.NODE_ENV !== \"production\" ? warning(!('disabled' in props), 'Collapse.Panel', '`disabled` is deprecated. Please use `collapsible=\"disabled\"` instead.') : void 0;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var customizePrefixCls = props.prefixCls,\n    _props$className = props.className,\n    className = _props$className === void 0 ? '' : _props$className,\n    _props$showArrow = props.showArrow,\n    showArrow = _props$showArrow === void 0 ? true : _props$showArrow;\n  var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n  var collapsePanelClassName = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-no-arrow\"), !showArrow), className);\n  return /*#__PURE__*/React.createElement(RcCollapse.Panel, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: collapsePanelClassName\n  }));\n};\nexport default CollapsePanel;","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {createElement, useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    /* c8 ignore next 7 -- hooks are client-only. */\n    function () {\n      const file = createFile(options)\n      processor.run(processor.parse(file), file, function (error, tree) {\n        setError(error)\n        setTree(tree)\n      })\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  /* c8 ignore next -- hooks are client-only. */\n  if (error) throw error\n\n  /* c8 ignore next -- hooks are client-only. */\n  return tree ? post(tree, options) : createElement(Fragment)\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  // Wrap in `div` if there’s a class name.\n  if (options.className) {\n    tree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className: options.className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        tree.type === 'root' ? tree.children : [tree]\n      )\n    }\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","\nimport \"/home/runner/work/react-map-ol/react-map-ol/node_modules/.pnpm/@antv+dumi-theme-antv@0.7.1_@algolia+client-search@5.22.0_@babel+core@7.26.10_@types+re_b9aac5d9ada30f7f72736958cc572c3f/node_modules/@antv/dumi-theme-antv/dist/slots/API/index.module.less?modules\";\nexport default {\"disorganized\": `disorganized-BfqRQyJ3`,\"api\": `api-toWdkOiy`,\"header\": `header-tzVgh-4P`,\"content\": `content-YOgcvUQB`}\n","function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { ZoomInOutlined, ZoomOutOutlined } from '@ant-design/icons';\nimport { Collapse, Popover } from 'antd';\nimport { get, sortBy, uniq } from 'lodash-es';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nimport { useSnapshot } from 'valtio';\nimport { store } from \"../../model\";\nimport { CollapsedIcon } from \"../../pages/Example/components/CollapsedIcon\";\nimport { getDemoInfo } from \"../CodeRunner/utils\";\nimport styles from \"./index.module.less\";\nvar Panel = Collapse.Panel;\nvar EMPTY = /^\\s*$/;\n/**\n * API 预览\n */\nexport var API = function API(_ref) {\n  var exampleTopics = _ref.exampleTopics,\n    topic = _ref.topic,\n    example = _ref.example,\n    demo = _ref.demo,\n    _ref$language = _ref.language,\n    language = _ref$language === void 0 ? 'zh' : _ref$language;\n  var state = useSnapshot(store);\n  var demoInfo = getDemoInfo(exampleTopics, topic, example, demo);\n  var APIContent = get(demoInfo, ['api', language]);\n\n  /** 从 MD 中解析出层级数据(eg: #、##、###)作为折叠分组条件 */\n  var findHashTag = function findHashTag(lines) {\n    var tagLines = lines.filter(function (line) {\n      return line.startsWith('#');\n    });\n    var tagReg = /^#+/g;\n    var tagLengths = tagLines.map(function (line) {\n      return line.match(tagReg)[0].length;\n    });\n    return sortBy(uniq(tagLengths));\n  };\n  var getRegex = function getRegex(tagLength) {\n    return new RegExp(\"^\".concat(new Array(tagLength).fill('#').join(''), \"\\\\s+([^\\\\n]*)\"));\n  };\n\n  /** 根据正则将内容切片 */\n  var setIndexTag = function setIndexTag(lines, regex) {\n    var start = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var result = [];\n    lines.forEach(function (line, index) {\n      if (regex.exec(line)) {\n        var header = regex.exec(line)[1];\n        result.push({\n          header: header,\n          start: index + start,\n          maxEndIndex: start + lines.length\n        });\n      }\n    });\n    return result;\n  };\n\n  /** 从 MD 中解析出嵌套结构, 最多支持 2 层 */\n  var getNestedDOM = function getNestedDOM(lines) {\n    var tags = findHashTag(lines);\n    var result = setIndexTag(lines, getRegex(tags[0]));\n    if (tags.length > 2) {\n      result = result.map(function (item, index) {\n        var _result;\n        var start = item.start;\n        return _objectSpread(_objectSpread({}, item), {}, {\n          children: setIndexTag(lines.slice(start + 1, (_result = result[index + 1]) === null || _result === void 0 ? void 0 : _result.start), getRegex(tags[1]), start + 1)\n        });\n      });\n    }\n    return result;\n  };\n  var MarkdownComponent = function MarkdownComponent(_ref2) {\n    var content = _ref2.content;\n    return /*#__PURE__*/React.createElement(Markdown, {\n      rehypePlugins: [rehypeRaw, remarkGfm],\n      components: {\n        // @ts-expect-error\n        description: function description(props) {\n          return /*#__PURE__*/React.createElement(\"span\", _extends({\n            style: {\n              fontSize: 12,\n              color: '#777'\n            }\n          }, props));\n        }\n      }\n    }, content);\n  };\n\n  /** 将扁平状态的 MD 解析为嵌套结构 */\n  var renderNestedDom = function renderNestedDom(content) {\n    var _result$;\n    if (!content) {\n      return null;\n    }\n    var lines = content.split('\\n');\n    var result = getNestedDOM(lines);\n\n    /** 避免无标题的情况内容丢失，内层嵌套的不做处理（不合理） */\n    var minStart = get(result, [0, 'start']);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, minStart > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.disorganized\n    }, /*#__PURE__*/React.createElement(MarkdownComponent, {\n      content: lines.slice(0, minStart).join('\\n')\n    })), /*#__PURE__*/React.createElement(Collapse, {\n      bordered: false,\n      defaultActiveKey: [(_result$ = result[0]) === null || _result$ === void 0 ? void 0 : _result$.header],\n      ghost: true\n    }, result.map(function (item, index) {\n      var _children$;\n      var start = item.start,\n        header = item.header,\n        _item$children = item.children,\n        children = _item$children === void 0 ? [] : _item$children;\n      var end = index === result.length - 1 ? lines.length : result[index + 1].start;\n      return /*#__PURE__*/React.createElement(Panel, {\n        header: /*#__PURE__*/React.createElement(\"b\", {\n          style: {\n            lineHeight: '22px',\n            fontSize: 16\n          }\n        }, header),\n        key: header\n      }, children.length > 0 ? /*#__PURE__*/React.createElement(Collapse, {\n        bordered: false,\n        defaultActiveKey: [(_children$ = children[0]) === null || _children$ === void 0 ? void 0 : _children$.header],\n        ghost: true\n      }, children.map(function (nestedItem, nestedIndex) {\n        var nestedStart = nestedItem.start,\n          nestedHeader = nestedItem.header,\n          maxEndIndex = nestedItem.maxEndIndex;\n        var nestEnd = nestedIndex === children.length - 1 ? maxEndIndex : children[nestedIndex + 1].start;\n        return /*#__PURE__*/React.createElement(Panel, {\n          header: /*#__PURE__*/React.createElement(\"b\", {\n            style: {\n              lineHeight: '22px',\n              fontSize: 14\n            }\n          }, nestedHeader),\n          key: nestedHeader\n        }, /*#__PURE__*/React.createElement(MarkdownComponent, {\n          content: lines.slice(nestedStart + 1, nestEnd).join('\\n')\n        }));\n      })) : /*#__PURE__*/React.createElement(MarkdownComponent, {\n        content: lines.slice(start + 1, end).join('\\n')\n      }));\n    })));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.api,\n    style: {\n      width: state.showAPI ? state.apiContainerWidth : 24\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header\n  }, /*#__PURE__*/React.createElement(\"p\", null, \"API\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.zoom\n  }, /*#__PURE__*/React.createElement(ZoomInOutlined, {\n    onClick: function onClick() {\n      store.apiContainerWidth += 100;\n    }\n  }), /*#__PURE__*/React.createElement(ZoomOutOutlined, {\n    style: {\n      marginLeft: 8\n    },\n    onClick: function onClick() {\n      if (state.apiContainerWidth > 150) {\n        store.apiContainerWidth -= 100;\n      }\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    content: language === 'zh' ? '展示文档' : 'Show docs',\n    placement: \"right\"\n  }, /*#__PURE__*/React.createElement(CollapsedIcon, {\n    isCollapsed: state.showAPI,\n    onClick: function onClick(show) {\n      store.showAPI = show;\n    },\n    style: {\n      left: 0,\n      top: 0\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content\n  }, !EMPTY.test(APIContent) ? renderNestedDom(APIContent) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"404\"), /*#__PURE__*/React.createElement(\"p\", null, \"Sorry, the API you visited does not exist.\"))));\n};","import { Layout } from 'antd';\nimport { useLocale, useSiteData } from 'dumi';\nimport { every, find, get } from 'lodash-es';\nimport React, { useContext } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport CommonHelmet from \"../../common/CommonHelmet\";\nimport InViewSuspense from \"../../common/InViewSuspense\";\nimport { ThemeAntVContext } from \"../../context\";\nimport { store } from \"../../model\";\nimport { API } from \"dumi/theme/slots/API\";\nimport CodeRunner from \"dumi/theme/slots/CodeRunner\";\nimport { getDemoInfo } from \"../../slots/CodeRunner/utils\";\nimport { CollapsedIcon } from \"./components/CollapsedIcon\";\nimport styles from \"./index.module.less\";\nvar Sider = Layout.Sider,\n  Content = Layout.Content;\nvar Header = /*#__PURE__*/React.lazy(function () {\n  return import(\"dumi/theme/slots/Header\");\n});\nvar ExampleSider = /*#__PURE__*/React.lazy(function () {\n  return import(\"dumi/theme/slots/ExampleSider\");\n});\n/**\n * 解析 Example 页面的元数据\n */\nvar useExampleMeta = function useExampleMeta() {\n  var _exampleTopics$find;\n  /** 示例页面的元数据信息 */\n  var metaData = useContext(ThemeAntVContext);\n  var exampleTopics = metaData.meta.exampleTopics;\n  var _useParams = useParams(),\n    topic = _useParams.topic,\n    example = _useParams.example;\n  var _useLocation = useLocation(),\n    hash = _useLocation.hash;\n  var examples = (_exampleTopics$find = exampleTopics.find(function (_ref) {\n    var id = _ref.id;\n    return id === topic;\n  })) === null || _exampleTopics$find === void 0 ? void 0 : _exampleTopics$find.examples;\n  var exampleDemo = find(examples, function (_ref2) {\n    var id = _ref2.id;\n    return id === example;\n  });\n  // examples/case/id hash 为空，可以默认第一个 example 对应的 demo\n  var demo = hash.slice(1) || get(exampleDemo, ['demos', '0', 'id']);\n  var locale = useLocale();\n  var exampleTitle = get(exampleDemo, ['title', locale.id]);\n  var currentDemo = getDemoInfo(exampleTopics, topic, example, demo);\n  var demoTitle = get(currentDemo, ['title', locale.id]);\n  return {\n    // all example topics\n    exampleTopics: exampleTopics,\n    // topic id\n    topic: topic,\n    // example id\n    example: example,\n    // example title\n    exampleTitle: exampleTitle,\n    // demo id\n    demo: demo,\n    // current demo info\n    currentDemo: currentDemo,\n    // demo title\n    demoTitle: demoTitle\n  };\n};\n\n/**\n * 具体单个案例的页面\n */\nvar Example = function Example() {\n  var state = useSnapshot(store);\n  var navigate = useNavigate();\n  var locale = useLocale();\n  var _useExampleMeta = useExampleMeta(),\n    exampleTopics = _useExampleMeta.exampleTopics,\n    exampleTitle = _useExampleMeta.exampleTitle,\n    currentDemo = _useExampleMeta.currentDemo,\n    topic = _useExampleMeta.topic,\n    example = _useExampleMeta.example,\n    demo = _useExampleMeta.demo,\n    demoTitle = _useExampleMeta.demoTitle;\n  var _useSiteData = useSiteData(),\n    themeConfig = _useSiteData.themeConfig;\n  var showAPI = every([get(themeConfig, 'showAPIDoc'), topic, example], Boolean);\n  if (!currentDemo) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.example\n  }, /*#__PURE__*/React.createElement(CommonHelmet, {\n    title: exampleTitle,\n    description: demoTitle\n  }), /*#__PURE__*/React.createElement(InViewSuspense, null, /*#__PURE__*/React.createElement(Header, {\n    isHomePage: false\n  })), /*#__PURE__*/React.createElement(Layout, {\n    className: styles.container\n  }, /*#__PURE__*/React.createElement(Sider, {\n    collapsedWidth: 0,\n    width: 250,\n    trigger: null,\n    collapsible: true,\n    collapsed: state.hideMenu,\n    className: styles.menuSider,\n    theme: \"light\"\n  }, /*#__PURE__*/React.createElement(InViewSuspense, null, /*#__PURE__*/React.createElement(ExampleSider, {\n    showExampleDemoTitle: true,\n    currentDemo: currentDemo,\n    onDemoClicked: function onDemoClicked(example) {\n      var demoId = example.id,\n        targetExample = example.targetExample,\n        targetTopic = example.targetTopic;\n      // eg: /examples/case/area/#area1\n      var prefix = locale.id === 'en' ? '/en' : \"\";\n      var newURL = \"\".concat(prefix, \"/examples/\").concat(targetTopic === null || targetTopic === void 0 ? void 0 : targetTopic.id, \"/\").concat(targetExample === null || targetExample === void 0 ? void 0 : targetExample.id, \"/#\").concat(demoId);\n      navigate(newURL);\n    },\n    exampleTopics: exampleTopics\n  })), /*#__PURE__*/React.createElement(CollapsedIcon, {\n    isCollapsed: state.hideMenu,\n    onClick: function onClick(show) {\n      store.hideMenu = show;\n    },\n    style: {\n      bottom: 0,\n      right: state.hideMenu ? -24 : 0\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    className: styles.content\n  }, /*#__PURE__*/React.createElement(CodeRunner, {\n    exampleTopics: exampleTopics,\n    topic: topic,\n    example: example,\n    demo: demo,\n    size: get(themeConfig, 'editor.size', 0.38)\n  })), showAPI && /*#__PURE__*/React.createElement(API, {\n    exampleTopics: exampleTopics,\n    topic: topic,\n    example: example,\n    demo: demo,\n    language: locale.id\n  })));\n};\nexport default Example;"],"names":[],"mappings":"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"}